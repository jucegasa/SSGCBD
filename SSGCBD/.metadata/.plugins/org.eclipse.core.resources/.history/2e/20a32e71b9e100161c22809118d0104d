package reportes.view;

import java.util.ArrayList;
import java.util.HashMap;

import org.eclipse.emf.common.util.EList;

import gestionmodelosconsultas.modeloconsultas.model.EADiagram;
import gestionmodelosconsultas.modeloconsultas.model.ElementoConsulta;
import gestionmodelosconsultas.modeloconsultas.que.Documento;
import gestionmodelosconsultas.modeloconsultas.que.QueFactory;
import tooldataform.ModelFactory;
import tooldataform.formmodel.concreta.Container;
import tooldataform.formmodel.concreta.Containment;
import tooldataform.formmodel.concreta.DataForm_Diagram;
import tooldataform.formmodel.concreta.RelacionDataForm;

public class ViewModelGenerator {
	
	ModelFactory modelFactoryDF = null;
	gestionmodelosconsultas.ModelFactory modelFactoryMC = null;
	whoownme.model.ModelFactoryModel modelFactoryModel = whoownme.model.ModelFactoryModel.getInstance();
	
	DataForm_Diagram dfDiagram;
	
	ArrayList<RelacionDataForm> relations;
	
	ArrayList<String> namesViewModel;
	
	HashMap<String , ElementoConsulta> mp;
	
	@SuppressWarnings("unchecked")
	public ViewModelGenerator(DataForm_Diagram dfDiagram) {
		
		this.dfDiagram = dfDiagram;
		relations = (ArrayList<RelacionDataForm>) dfDiagram.getListarelacion();
		namesViewModel = new ArrayList<String>();
	}
	
	public String getNameEntity(String rol) {
		
		return rol.substring(4, rol.length());
	}
	
	
	public void exploreRelations() {
		
		RelacionDataForm relation = null;
		String bRol;
		for (int i = 0; i < relations.size(); i++) {
			
			relation = relations.get(i);
			if(relation.getSource() instanceof Container && relation instanceof Containment) {
				break;
			}
		}
		
		while (relation != null) {
			
			bRol = getNameEntity(relation.getBRol());
			relation = null;
			for (int i = 0; i < relations.size(); i++) {
				
				if(relations.get(i).getARol().equals("ownedBy"+bRol) && relation instanceof Containment) {
					relation = relations.get(i);
				}
			}
			
			namesViewModel.add(bRol);
		}
	}
	public void inicializarMC() {
		
		org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createURI("platform:/resource/GestionConsultas/modelos/produccion.gestionmodelosconsultas");
		org.eclipse.emf.ecore.resource.ResourceSet resourceSet= new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();
		org.eclipse.emf.ecore.resource.Resource resource = resourceSet.createResource(uri);
		try {
			resource.load(java.util.Collections.EMPTY_MAP);
			modelFactoryMC = (gestionmodelosconsultas.ModelFactory) resource.getContents().get(0);
		} catch (java.io.IOException e) {
			
			// TO-DO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void crearViewModels() {
		EList<EADiagram> listaViewModel = modelFactoryMC.getFactoryModeloConsultas().getListModeloConsulta().get(0).getListEADiagram();
		EADiagram vm = null;
		for (int i = 0; i < namesViewModel.size(); i++) {
			
			vm = listaViewModel.get(0);
			vm = gestionmodelosconsultas.modeloconsultas.model.ModelFactory.eINSTANCE.createViewModel();
			
			if (namesViewModel.get(i).contains("Table")) {
				Documento d = QueFactory.eINSTANCE.createDocumento();
				d.setOrder(1);
				vm.getListElementoConsulta().add(d);
			}
			listaViewModel.add(vm);
		}
		
		modelFactoryMC.salvar();
	}
}
